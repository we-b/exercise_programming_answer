[{"/Users/tech-camp/exercise_programming_answer2/Lesson5/６章：取得したデータを画面に表示しよう/定着ドリル/src/reportWebVitals.js":"1","/Users/tech-camp/exercise_programming_answer2/Lesson5/６章：取得したデータを画面に表示しよう/定着ドリル/src/pages/top/index.tsx":"2","/Users/tech-camp/exercise_programming_answer2/Lesson5/６章：取得したデータを画面に表示しよう/定着ドリル/src/pages/genre/index.tsx":"3"},{"size":362,"mtime":1610857388538,"results":"4","hashOfConfig":"5"},{"size":2578,"mtime":1611186283784,"results":"6","hashOfConfig":"5"},{"size":377,"mtime":1611151964886,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1fbn8bm",{"filePath":"10","messages":"11","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"12"},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/tech-camp/exercise_programming_answer2/Lesson5/６章：取得したデータを画面に表示しよう/定着ドリル/src/reportWebVitals.js",[],"/Users/tech-camp/exercise_programming_answer2/Lesson5/６章：取得したデータを画面に表示しよう/定着ドリル/src/pages/top/index.tsx",["15","16"],"import React, {useEffect, useState} from \"react\";\nimport { genreRequest } from '../../requests/genreRequest'\nimport { taskRequest } from '../../requests/taskRequest'\nimport { useDataReducer } from '../../hooks/useDataReducer'\nimport { GenreType } from '../../interfaces/GenreType'\nimport { TaskType } from '../../interfaces/TaskType'\nimport { useFilterTasks } from \"../../hooks/useFilterTasks\";\nimport Task from '../task'\nimport Genre from '../genre'\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport './index.css';\n\nexport default function Index () {\n  const [data, dispatch] = useDataReducer();\n  const [isGenreListOpen, setIsGenreListOpen] = useState(true);\n  const [isTaskListOpen, setIsTaskListOpen] = useState(true);\n  const [selectedGenreId, setSelectedGenreId] = useState(0);\n  const [filteredTasks, tasksDispatch] = useFilterTasks();\n\n  const fetchGenres = async () => {\n    const genres = await genreRequest(\"fetchGenres\");\n    dispatch({ type: \"genresUpdate\", payload: { genre: genres } });\n  };\n\n  const fetchTasks = async () => {\n    const tasks = await taskRequest(\"fetchTasks\");\n    dispatch({ type: \"tasksUpdate\", payload: { task: tasks } });\n  };\n\n  const handleOnClickGnereMenu = () => {\n    setIsGenreListOpen(!isGenreListOpen)\n  };\n\n  const handleOnClickTaskMenu = () => {\n    setIsTaskListOpen(!isTaskListOpen)\n  };\n\n  const handleOnClickSelectedGenreId = (genre_id: number) => {\n    setSelectedGenreId(genre_id)\n  };\n\n  useEffect(() => {\n    fetchGenres()\n    fetchTasks()\n  }, []);\n\n  useEffect(() => {\n    tasksDispatch({ type: \"filterTask\", payload: { tasks: data.tasksData, genre_id: selectedGenreId }})\n  }, [selectedGenreId]);\n\n  return (\n    <div className='main'>\n      <div className='list'>\n        <div className='bar'>\n          <MenuIcon onClick={ handleOnClickGnereMenu}/>\n          <div className='genre-bar'>ジャンル一覧</div>\n        </div>\n        <div className='genres'>\n        { isGenreListOpen && data.genresData.map((genre: GenreType) => \n          {\n            return (\n              <Genre genre={genre} handleOnClickSelectedGenreId={handleOnClickSelectedGenreId}/>\n            )\n          }\n        )}\n        </div>\n      </div>\n    <div className='list'>\n        <div className='bar'>\n          <MenuIcon onClick={ handleOnClickTaskMenu}/>\n          <div>タスク一覧</div>\n        </div>\n        <div className='tasks'>\n        { isTaskListOpen && filteredTasks.map((task: TaskType) => {\n          return (\n              <Task task={task}/>\n          )\n        })}\n        </div>\n      </div>\n    </div>\n  )\n};\n","/Users/tech-camp/exercise_programming_answer2/Lesson5/６章：取得したデータを画面に表示しよう/定着ドリル/src/pages/genre/index.tsx",[],{"ruleId":"17","severity":1,"message":"18","line":45,"column":6,"nodeType":"19","endLine":45,"endColumn":8,"suggestions":"20"},{"ruleId":"17","severity":1,"message":"21","line":49,"column":6,"nodeType":"19","endLine":49,"endColumn":23,"suggestions":"22"},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'fetchGenres' and 'fetchTasks'. Either include them or remove the dependency array.","ArrayExpression",["23"],"React Hook useEffect has missing dependencies: 'data.tasksData' and 'tasksDispatch'. Either include them or remove the dependency array.",["24"],{"desc":"25","fix":"26"},{"desc":"27","fix":"28"},"Update the dependencies array to be: [fetchGenres, fetchTasks]",{"range":"29","text":"30"},"Update the dependencies array to be: [data.tasksData, selectedGenreId, tasksDispatch]",{"range":"31","text":"32"},[1505,1507],"[fetchGenres, fetchTasks]",[1640,1657],"[data.tasksData, selectedGenreId, tasksDispatch]"]